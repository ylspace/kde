From patchwork Mon Mar 25 18:47:31 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: David Rientjes <rientjes@google.com>
X-Patchwork-Id: 10869929
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 82DFB139A
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 25 Mar 2019 18:47:36 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6E29429189
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 25 Mar 2019 18:47:36 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6280229194; Mon, 25 Mar 2019 18:47:36 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,
	USER_IN_DEF_DKIM_WL autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5104129189
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 25 Mar 2019 18:47:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730277AbfCYSre (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 25 Mar 2019 14:47:34 -0400
Received: from mail-pg1-f194.google.com ([209.85.215.194]:34243 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730243AbfCYSrd (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 25 Mar 2019 14:47:33 -0400
Received: by mail-pg1-f194.google.com with SMTP id v12so7034637pgq.1
        for <kvm@vger.kernel.org>; Mon, 25 Mar 2019 11:47:33 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:from:to:cc:subject:message-id:user-agent:mime-version;
        bh=fRdq63OhSxm5cgv8tRdBJK1Sff/Wou+7tzmBvJBIrrU=;
        b=ApsvyUbVLS4sN8mLCNZ0dSvTIL37bi8ZAKmmhCRHCqF/YOYbXxBHnlpBmimIgdrjPZ
         D8eX4iQR/iV7vwrlu/a1q9PTDnqrdazDIhqfIeyA1Zg47+toNQdIqMFLg3UBE4mpqyVF
         2FrrfdiEIWJ8keELyAaOmLJMLXl1PeU+CSezjU1LsmJGKP1IhUR0aL3UrSCyNM2OiUkD
         72all7OweA4O7qWPv6WmgeSzrIlLAFy/A0TZ8kcFnQiEZfThjLFe/ff9lcIiU5VFwxI2
         04F7YUp1RyoQOaijNWFANSlS+h/QH0+i/ufdYHwY/Pt1O3BitMDRMKBzwwfE7OnBN6FX
         k1dQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:user-agent
         :mime-version;
        bh=fRdq63OhSxm5cgv8tRdBJK1Sff/Wou+7tzmBvJBIrrU=;
        b=VhKduZqDA65UXrOCGaSOz0byrR7sVQsKz9aGGd3mUgQhaFSMbYF217WHBZVwPiBMJz
         6lxcq1CyUw5DwrNjq4b86V2E5lvlDxD98d1teN+oND1oEs1rlam2+wWL8M/P23fNPqmr
         cTs2WYD5z9MBlRGMqMSUiBgaDfPIM3pIDl/6GuPkrDg3RPd7yoUm5ImxF0ZA1bZzofu0
         H4xNgH/DHJYCqxKYx2s3JDBKIaos3Fl8RQlIC8No/IBbi7jnZmQwSegdnuDou7SJGtLP
         dqAdFP4DfYClnEtyuoHxvULos+Jg0d7gTlHQleHi4sRNszrT/a/OD+9mKILyufIntV4+
         yOQQ==
X-Gm-Message-State: APjAAAV85mrMnQdtztYB6F5+mKrqPsbfAS7WE8/Qf5SLOxf2CWE+DzvV
        3pWViMbpS8/PEeTMTwTZehAHlQ==
X-Google-Smtp-Source: 
 APXvYqxYG0EDdOeSHsVt+srIwGgDgZV5j2oAGIcoS+zCeAb0HoExNgRBQxX/Am1W5yFZrJ2AyVMS3Q==
X-Received: by 2002:a63:c145:: with SMTP id p5mr25246258pgi.248.1553539652886;
        Mon, 25 Mar 2019 11:47:32 -0700 (PDT)
Received: from [2620:15c:17:3:3a5:23a7:5e32:4598]
 ([2620:15c:17:3:3a5:23a7:5e32:4598])
        by smtp.gmail.com with ESMTPSA id
 f14sm20714146pfn.3.2019.03.25.11.47.31
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 25 Mar 2019 11:47:32 -0700 (PDT)
Date: Mon, 25 Mar 2019 11:47:31 -0700 (PDT)
From: David Rientjes <rientjes@google.com>
X-X-Sender: rientjes@chino.kir.corp.google.com
To: Brijesh Singh <brijesh.singh@amd.com>, Joerg Roedel <joro@8bytes.org>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>
cc: Borislav Petkov <bp@suse.de>, x86@kernel.org, kvm@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: [patch] KVM: SVM: prevent DBG_DECRYPT and DBG_ENCRYPT overflow
Message-ID: <alpine.DEB.2.21.1903251146160.188887@chino.kir.corp.google.com>
User-Agent: Alpine 2.21 (DEB 202 2017-01-01)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

This ensures that the address and length provided to DBG_DECRYPT and
DBG_ENCRYPT do not cause an overflow.

At the same time, pass the actual number of pages pinned in memory to
sev_unpin_memory() as a cleanup.

Reported-by: Cfir Cohen <cfir@google.com>
Signed-off-by: David Rientjes <rientjes@google.com>
---
 arch/x86/kvm/svm.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -6799,7 +6799,8 @@ static int sev_dbg_crypt(struct kvm *kvm, struct kvm_sev_cmd *argp, bool dec)
 	struct page **src_p, **dst_p;
 	struct kvm_sev_dbg debug;
 	unsigned long n;
-	int ret, size;
+	unsigned int size;
+	int ret;
 
 	if (!sev_guest(kvm))
 		return -ENOTTY;
@@ -6807,6 +6808,11 @@ static int sev_dbg_crypt(struct kvm *kvm, struct kvm_sev_cmd *argp, bool dec)
 	if (copy_from_user(&debug, (void __user *)(uintptr_t)argp->data, sizeof(debug)))
 		return -EFAULT;
 
+	if (!debug.len || debug.src_uaddr + debug.len < debug.src_uaddr)
+		return -EINVAL;
+	if (!debug.dst_uaddr)
+		return -EINVAL;
+
 	vaddr = debug.src_uaddr;
 	size = debug.len;
 	vaddr_end = vaddr + size;
@@ -6857,8 +6863,8 @@ static int sev_dbg_crypt(struct kvm *kvm, struct kvm_sev_cmd *argp, bool dec)
 						     dst_vaddr,
 						     len, &argp->error);
 
-		sev_unpin_memory(kvm, src_p, 1);
-		sev_unpin_memory(kvm, dst_p, 1);
+		sev_unpin_memory(kvm, src_p, n);
+		sev_unpin_memory(kvm, dst_p, n);
 
 		if (ret)
 			goto err;
